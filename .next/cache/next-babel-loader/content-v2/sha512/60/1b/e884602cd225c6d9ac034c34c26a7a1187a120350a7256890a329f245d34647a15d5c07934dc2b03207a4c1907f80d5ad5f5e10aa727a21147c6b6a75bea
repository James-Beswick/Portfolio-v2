{"ast":null,"code":"import { useState } from 'react';\n\nconst useContactForm = valIsValidFn => {\n  const {\n    0: enteredValue,\n    1: setEnteredValue\n  } = useState('');\n  const {\n    0: isTouched,\n    1: setIsTouched\n  } = useState(false);\n  const isValid = valIsValidFn(enteredValue);\n  const hasError = !isValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setIsTouched(false);\n    setEnteredValue('');\n  };\n\n  return {\n    enteredValue,\n    isValid,\n    hasError,\n    valueBlurHandler,\n    valueChangeHandler,\n    reset\n  };\n};\n\nexport default useContactForm;","map":{"version":3,"sources":["/Users/james/Desktop/Portfolios/portfolio-nextjs/components/hooks/use-contact-form.js"],"names":["useState","useContactForm","valIsValidFn","enteredValue","setEnteredValue","isTouched","setIsTouched","isValid","hasError","valueChangeHandler","event","target","value","valueBlurHandler","reset"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,cAAc,GAAGC,YAAY,IAAI;AACrC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,OAAO,GAAGL,YAAY,CAACC,YAAD,CAA5B;AACA,QAAMK,QAAQ,GAAG,CAACD,OAAD,IAAYF,SAA7B;;AAEA,QAAMI,kBAAkB,GAAGC,KAAK,IAAI;AAClCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,KAAK,IAAI;AAChCJ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMQ,KAAK,GAAG,MAAM;AAClBR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAHD;;AAKA,SAAO;AACLD,IAAAA,YADK;AAELI,IAAAA,OAFK;AAGLC,IAAAA,QAHK;AAILK,IAAAA,gBAJK;AAKLJ,IAAAA,kBALK;AAMLK,IAAAA;AANK,GAAP;AAQD,CA5BD;;AA8BA,eAAeb,cAAf","sourcesContent":["import { useState } from 'react';\n\nconst useContactForm = valIsValidFn => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const isValid = valIsValidFn(enteredValue);\n  const hasError = !isValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const valueBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setIsTouched(false);\n    setEnteredValue('');\n  };\n\n  return {\n    enteredValue,\n    isValid,\n    hasError,\n    valueBlurHandler,\n    valueChangeHandler,\n    reset,\n  };\n};\n\nexport default useContactForm;\n"]},"metadata":{},"sourceType":"module"}